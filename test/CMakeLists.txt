find_package(SDL 1.2 REQUIRED)
find_package(OpenMP QUIET)
option(USE_OPTIMIZED_KERNELS "Use the optimized kernels for x86" ON)
if (USE_OPTIMIZED_KERNELS)
    set(TARGET_MACHINE x86)
else ()
    set(TARGET_MACHINE generic)
endif ()
add_executable(bvh_test bvh_test.c)
add_executable(intr_box_bench intr_box_bench.c)
add_executable(intr_box_test intr_box_test.c)
add_executable(intr_bvh_test intr_bvh_test.c)
add_executable(intr_frustum_test intr_frustum_test.c)
add_executable(intr_tri_test intr_tri_test.c)
add_executable(view_test view_test.c)
add_executable(scale_obj scale_obj.c)
add_executable(viewer viewer.c obj_loader.c tga_loader.c)
target_link_libraries(bvh_test          PUBLIC dream_${TARGET_MACHINE})
target_link_libraries(intr_box_bench    PUBLIC dream_${TARGET_MACHINE})
target_link_libraries(intr_box_test     PUBLIC dream_${TARGET_MACHINE})
target_link_libraries(intr_bvh_test     PUBLIC dream_${TARGET_MACHINE})
target_link_libraries(intr_frustum_test PUBLIC dream_${TARGET_MACHINE})
target_link_libraries(intr_tri_test     PUBLIC dream_${TARGET_MACHINE})
target_link_libraries(view_test         PUBLIC dream_${TARGET_MACHINE})
target_link_libraries(scale_obj         PUBLIC dream_${TARGET_MACHINE})
target_link_libraries(viewer            PUBLIC dream_${TARGET_MACHINE} ${SDL_LIBRARY})
target_include_directories(viewer PUBLIC ${SDL_INCLUDE_DIRS})
if (OpenMP_FOUND)
    target_link_libraries(viewer PUBLIC OpenMP::OpenMP_C)
endif ()
